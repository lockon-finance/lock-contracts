{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x34f15a981ccbaCf6A6B0347757d0560Baf526A83",
      "txHash": "0xd7e78b760f82802f76b31c2b59d2f122ac04f42454ef293f606b61a52a9de0e1",
      "remoteDeploymentId": "30c67d24-3201-4026-8ccb-409f7fc1d373",
      "kind": "uups"
    },
    {
      "address": "0x470b83CbFaFd5F5dC5925bC7719e080D9C79Dc47",
      "txHash": "0xe72b8d3bf6ca33dbcbc4aa1cc81ba618cdb216fa5f5f579348831149b6d086f8",
      "remoteDeploymentId": "a004fa1e-a42d-4bb3-a2ad-2edc5513bebc",
      "kind": "uups"
    },
    {
      "address": "0xa7D5d65bd64B51Dc847DA244d772C1c36Fd5C49b",
      "txHash": "0xa74b0675651f54f3664e4d09f9d3ea913aa2e553bb688b6f8b85f4ca2ef02cd8",
      "remoteDeploymentId": "36c51042-edf3-434e-9931-d67d0bbb04b4",
      "kind": "uups"
    },
    {
      "address": "0x6F111Be93a9371eE57F1c05dcEf9891Fdc90f4e7",
      "txHash": "0x438f685e2aaa3c9e87b0a3f925874c3dbe8b68ad5bcb7742b66f2a759e91d10d",
      "remoteDeploymentId": "af4b8504-e4ea-4519-940f-31eeb31e02a6",
      "kind": "uups"
    },
    {
      "address": "0xe8e20c70a47839f8525b401841BCb67f1e3f24b5",
      "txHash": "0x31e64ee6dc32fffc9d03620e779103a5c180271497a4da0368e96fc5b711cc41",
      "remoteDeploymentId": "905550ba-4ccd-48b4-bdb5-68866ed6be97",
      "kind": "uups"
    },
    {
      "address": "0xe11Ff8832BD3817464C921e0B59a898160e20f6B",
      "txHash": "0xeaeb5144c90e200bbdb00d157313c76cfb73a140a614ad32d7902d648f833e4e",
      "remoteDeploymentId": "666c28f9-e696-47c0-b8b5-c7506b7abe79",
      "kind": "uups"
    },
    {
      "address": "0xec30C970008fbB86A47A11024309BE2e8Cb0a130",
      "txHash": "0x5ddb008cc95918ba62e92db555ff1234229d527955035f955f6d8972bbc1e313",
      "remoteDeploymentId": "6d40e88d-d4d3-43c3-b1e0-d04b01485a3e",
      "kind": "uups"
    },
    {
      "address": "0x4F344dF3CF73a3857D612d2e55e831a251e68931",
      "txHash": "0xf97537e9c4f06e73609200d6290eef96140ec9caf1e551e30e7c8dfd3ea77e01",
      "remoteDeploymentId": "bb87e0c0-4c45-4e57-bb35-063a53c75385",
      "kind": "uups"
    },
    {
      "address": "0xAE9BD5415a0Fd0736Af8598189113D4C11409902",
      "txHash": "0x256b4d863685566023bb3e01498a0f25a44263d780946491f80996f7030a67cb",
      "remoteDeploymentId": "b0f91307-240d-4be0-a195-b74a97a29068",
      "kind": "uups"
    },
    {
      "address": "0x627D9D76BCAa8eB15E4339fFB0d18ea5bC7c4f5C",
      "txHash": "0xd00a6018c0adead708b48b66774250a5d15ca8991ff320d8f4462096a7fead67",
      "remoteDeploymentId": "d9889d62-d3cb-4839-8de5-6d65da122ec0",
      "kind": "uups"
    },
    {
      "address": "0x9d0ECB255B7c93b2846E3f90CB40942B58470467",
      "txHash": "0xb9b739724f3fa33ef0a780877bff0f9523a00f3f7ed2d237ecd084e8c7d1d203",
      "remoteDeploymentId": "3a026a4a-353b-481f-b8b4-d598ef58d9a6",
      "kind": "uups"
    },
    {
      "address": "0x331418aDFa977004849e3A916062EbAc7973252b",
      "txHash": "0x88a14c0811a6fc5caffb3036482bb0c8b362ec8408985ba08746fac6b2958f8d",
      "remoteDeploymentId": "972b0740-78f4-4b72-b1e5-657caf2db4cd",
      "kind": "uups"
    },
    {
      "address": "0x5971706B1f9cFCDAaa58eF12A6a42C8eBfA651b5",
      "txHash": "0xd45d912f71ec1d4bc69250f7121e67f4ac28234f4767cbb71c02215377c6a1ba",
      "remoteDeploymentId": "b3b6c6bf-ff42-4f69-8f6f-ff8480f30f5b",
      "kind": "uups"
    },
    {
      "address": "0x81158bc3dA22E5f5d37622d7C31047d50fF719df",
      "txHash": "0x5ffc08bfdf9d29cf47f677244df35dafaad2d9f52305445ce4b461ef11571f90",
      "remoteDeploymentId": "044b0b84-8bea-4b1a-985f-fd48fe755aa1",
      "kind": "uups"
    },
    {
      "address": "0x52427756F538A9f1CA40074Da5892A7Db691E9Da",
      "txHash": "0xdf04def4aaeaacfe3a13521daf5d9eb6f0017bd178228bd5e670f5fb06067a8c",
      "remoteDeploymentId": "7e613525-c843-4ef2-82ba-451222fccce7",
      "kind": "uups"
    },
    {
      "address": "0xdCcf5cE8aCD4D628beB2b036Aba8E2479B9C03f6",
      "txHash": "0x5d8986c8c9ec07d1f1bda74e9bed30b23d85a5d1ed3dd77878c48358d76cae38",
      "remoteDeploymentId": "503c4949-1203-4b8c-9023-fd659d259b0a",
      "kind": "uups"
    },
    {
      "address": "0x4C6aCC79aeA5Ce6d64E3Ae74D31A3265b6Fe9f2d",
      "txHash": "0xa02c7a3e9e2e83e8ac0943b4d61ef073e0ab9f775dcbfa10cabf9176655aeceb",
      "remoteDeploymentId": "4a8b99dc-7496-4e81-ab29-19bb81e45638",
      "kind": "uups"
    },
    {
      "address": "0xFBe68a87c3Ebe495f390F6dbDD5A754F7cD46b01",
      "txHash": "0x8a57ba44d8b9e653e59383430247c8924db2fe934862b52b070d5d3b9428fa42",
      "remoteDeploymentId": "ef70acb1-28a0-4ed6-8edd-fbe42aeccfb9",
      "kind": "uups"
    },
    {
      "address": "0x2007cE1702b14B50571b1c046623bCE0E866C674",
      "txHash": "0x8247ab2ea491b58b1e5872a3c646e96ba1cd419a1557c9c9948e3b88be8c77da",
      "remoteDeploymentId": "3919238f-a832-47c9-b06a-e3a1b7502cf0",
      "kind": "uups"
    },
    {
      "address": "0x57FacD55ee6c92FE553Bd83911818411830E1Ad6",
      "txHash": "0x86450c03567fa0fe7a19c060f4ae74228aee482aa2306c4d453bea49e7c6854f",
      "remoteDeploymentId": "24323604-38ea-4ef9-8ff9-601df5b08d14",
      "kind": "uups"
    },
    {
      "address": "0x92d6d8250c4Fd173fC1D63D8d9F0Ed536635041B",
      "txHash": "0x56a565cc066c26561e5be98c5bdb6b840464b8187139c3e4fdd2aba8fb580f69",
      "remoteDeploymentId": "994f0417-0b65-4a00-8418-c240b6e6c988",
      "kind": "uups"
    },
    {
      "address": "0xE38728F61BCd3FF5B59252f1FC974AA8eD5055EC",
      "txHash": "0x29bc57cbd87ab004a6ce9d94bbe137e95c38169a5860cb8ce526edd8299fb757",
      "remoteDeploymentId": "1b9df408-5748-41ea-8e5d-5eb9736ce5fb",
      "kind": "uups"
    },
    {
      "address": "0xc0c14eD1f89fCa9Ad55bAdD3C62b49041Ff6598E",
      "txHash": "0x264f87ff73dc7f2baea1b40037a2c89154bec7f3e90710b07236d8c4887ea9d9",
      "remoteDeploymentId": "d4d76c8e-202d-47f3-9d7d-d78715feb66a",
      "kind": "uups"
    },
    {
      "address": "0xFeb777139148DA8f2B57883C04A2EdbB93482498",
      "txHash": "0x72aff284790631cabcfaa340208b0aa8755d692040a5e0786e68aeaaeb78904b",
      "remoteDeploymentId": "0a0de510-dc2e-4d28-a4d0-10c4ccf9da12",
      "kind": "uups"
    },
    {
      "address": "0x8C5b550Dd1Fa49F7d3128381FcC55a4792a72953",
      "txHash": "0x7ddeb85bf7a67feaef0085ce0966d07b8dc25fe92a3f3dad9207f034da8e2caf",
      "remoteDeploymentId": "1dfab978-2b83-420f-8934-58d75823d3f8",
      "kind": "uups"
    },
    {
      "address": "0xEa68B6250e08b3A5245d835cBDF4c4534ec3EC8a",
      "txHash": "0x9ab56ad1a16b64c3f1d10fa4a7a0ee6135aea56c29fb5bda953acfd59f3d0cb3",
      "remoteDeploymentId": "35fc516b-c06f-4856-9da6-2861bf49c706",
      "kind": "uups"
    },
    {
      "address": "0x22f8c82CD959d14C3993A763a6E7F6cf8DE8729f",
      "txHash": "0xb56530dfed184fd13b3f8119bb1724fa68a3bb6b7bf129b9bc0f1c5e1f49d240",
      "remoteDeploymentId": "637fedae-7ded-4478-8e0b-a0ce80cbda91",
      "kind": "uups"
    }
  ],
  "impls": {
    "ab3071991d374e8a84df1dac0782fdd8640fa1342993cf504db13ba571b8cce0": {
      "address": "0x273F411bB631667Bd8f99b392E13295fB236BA9C",
      "txHash": "0x4e6ed701aa3d7feaa7fb01dc9ae1284a86c33053cb1ea34902b57d039bfd0366",
      "remoteDeploymentId": "937f6738-7b28-4d8a-801e-15f5385f3221",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)198_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "83836c098f8b4b3d1852dedba126dc4caa02a18c399f3267c381342b6fa58e88": {
      "address": "0xbb5e8A18CA1F840a84FA3b3326754c7dC4b83545",
      "txHash": "0xcc166e1ddfcc93f9b935f9c5392b6518ccd705f22dabce66aae01c82e7e991c9",
      "remoteDeploymentId": "b923147d-016c-4d04-9aec-1d8e2e07043e",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vestingCategories",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:54"
          },
          {
            "label": "userVestingWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)7780_storage))",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:56"
          },
          {
            "label": "isAllowedDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:58"
          },
          {
            "label": "isBlacklistUser",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:60"
          },
          {
            "label": "listAllowedDeposit",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:62"
          },
          {
            "label": "allowedDepositOneBasedIndexes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:64"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:66"
          },
          {
            "label": "blacklistOneBasedIndexes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:68"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)2505",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)7780_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LockonVesting.VestingWallet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingWallet)7780_storage)": {
            "label": "mapping(uint256 => struct LockonVesting.VestingWallet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingWallet)7780_storage": {
            "label": "struct LockonVesting.VestingWallet",
            "members": [
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vestingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "categoryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9ba371b37eacbec5c25dd3d0170158cd9d93ee8041e68874255440cbdea4bf92": {
      "address": "0x260F6E070c3310bE9431652Ad840B0ffc7196beA",
      "txHash": "0x6167763df55ac4f4aa6e07723f9340f5ef7478006c497d226453f2039abe3a89",
      "remoteDeploymentId": "f11147cc-f25e-4fbd-a0e5-eb18213a729d",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:72"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:74"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:76"
          },
          {
            "label": "totalLockedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:78"
          },
          {
            "label": "totalLockScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:80"
          },
          {
            "label": "rewardPerScore",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:82"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:84"
          },
          {
            "label": "lockTokenReleasedTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:86"
          },
          {
            "label": "lastRewardTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:88"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:90"
          },
          {
            "label": "basicRateDivider",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:92"
          },
          {
            "label": "bonusRatePerSecond",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:94"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:96"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)5980_storage)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:98"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(IERC20)2505",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:100"
          },
          {
            "label": "minimumLockDuration",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:102"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)5980_storage)": {
            "label": "mapping(address => struct LockStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)5980_storage": {
            "label": "struct LockStaking.UserInfo",
            "members": [
              {
                "label": "lockedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastBasicRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEndTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "db39f6117b7450597e434896545425f503dcc013c86b9d37d83b83744b6a3420": {
      "address": "0x577CeD5D2a2FA31Fefc05aceDa6acAC1c186d963",
      "txHash": "0xd9b2c5846ae9c0b3a79d2eec7e9b964836aae7242ae8211b465b04a57e825b72",
      "remoteDeploymentId": "70039a80-a16c-4293-b479-5f343c0063c4",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "isStakingClaimed",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:69"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:74"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:76"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20)2505",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:78"
          },
          {
            "label": "lastRewardDistributionTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:80"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:82"
          },
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(PoolInfo)5106_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:84"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5098_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:86"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5098_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)5106_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)5098_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)5106_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)2505",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UserInfo)5098_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
