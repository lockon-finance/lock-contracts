{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xebad65486220994e5ba0dD4b13a40c4e27C1235B",
      "txHash": "0x575612165d85a28711505b871d09af1076d9e8fd711792f49d23843d2abf5290",
      "remoteDeploymentId": "0dfd9378-7258-4b4c-99db-6ac2d341662b",
      "kind": "uups"
    },
    {
      "address": "0xaCe9eBE23a81110C7cc3608C825A04242a005358",
      "txHash": "0x5449d1d8f3ba93d0d4f329fc5c09da2051d8ed5172e2060110aaabd208144bfd",
      "remoteDeploymentId": "224ae10c-883d-4c52-92a9-62ceab81753d",
      "kind": "uups"
    },
    {
      "address": "0x307cA9Cbd12FB1A797169653B8828A7AF31F9c19",
      "txHash": "0x15b905a6e982a35e3c9d31e9433a6720906636a055e45437c14eff926052776d",
      "remoteDeploymentId": "c11b7983-fa8d-4761-8355-4399cf604e74",
      "kind": "uups"
    },
    {
      "address": "0x91244CA51e59E0e64D7527f87b90Ef659B07db4a",
      "txHash": "0x873f3e6e5c539bb7c94b37d88defad0a2ceaf300793db19d2af651893c5d8478",
      "remoteDeploymentId": "d4eaae62-9236-4cfd-a8c3-d9c99bd24a6e",
      "kind": "uups"
    },
    {
      "address": "0x89E08CEFa2275D1631e4ac1F7208c88cA6B08300",
      "txHash": "0xd502ee0707a8ddf2117f1735c5311001dc2ee6b561985d3ea3b232dafa5b8495",
      "remoteDeploymentId": "2b20399f-0738-4a6c-bd5c-86073aa78baa",
      "kind": "uups"
    },
    {
      "address": "0xB0bcd135a9F37060811E48c15b79487789F3D5F0",
      "txHash": "0xaee8ffaeca0777ea36cca473fec373d7ae0be4aa5acaa0ddb51a5e1cea816b8a",
      "remoteDeploymentId": "b28e914e-a094-4f42-ac62-361500562a41",
      "kind": "uups"
    }
  ],
  "impls": {
    "8962932141d228ba168eb381c6bdd12b4a4f26d07cf11cd3277334d11b99ca1f": {
      "address": "0x5aa501346f1907F343B0aaf5E1eE1A3fe3566262",
      "txHash": "0x2c5659210e5f91f2edd516c55a09a21e4e3d44d6b8f4cf40bea90fff1e4f546a",
      "remoteDeploymentId": "325a3d2b-5210-4e13-aac1-e5f68492e928",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockToken",
            "src": "contracts/LockToken.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)198_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "84cab274998e7bcad83951f5574772d847d0783b75a613fb2214caa2be3d9777": {
      "address": "0xc8f0c92770bfbAc1e0d8cbCbcbb2302A869E625B",
      "txHash": "0x4ad57522c0d711c6abc02a41bda2f94b613c1acb2a076a53372f96eda060930e",
      "remoteDeploymentId": "798b854c-bf15-4c67-b5d6-f5847b2596a3",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vestingCategories",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:55"
          },
          {
            "label": "userVestingWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)9907_storage))",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:59"
          },
          {
            "label": "isAllowedDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:63"
          },
          {
            "label": "isBlacklistUser",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:67"
          },
          {
            "label": "listAllowedDeposit",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:71"
          },
          {
            "label": "allowedDepositOneBasedIndexes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:75"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:79"
          },
          {
            "label": "blacklistOneBasedIndexes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:83"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)2505",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)9907_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LockonVesting.VestingWallet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingWallet)9907_storage)": {
            "label": "mapping(uint256 => struct LockonVesting.VestingWallet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingWallet)9907_storage": {
            "label": "struct LockonVesting.VestingWallet",
            "members": [
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vestingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "categoryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "92d875ede32463de7038cfb5f11d372454b63ca9e4130f126e05622009057622": {
      "address": "0x0EFD5F8Ed0773d1C7B5cDB71F5aC8CE64c224228",
      "txHash": "0xb3f68c88b626061935c6ea5ef655b77ceb7e638f9519282cf451d9adca9f27d2",
      "remoteDeploymentId": "550335e3-cc02-4167-b19d-206c14b653fa",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:78"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:82"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:86"
          },
          {
            "label": "totalLockedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:90"
          },
          {
            "label": "totalLockScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:94"
          },
          {
            "label": "rewardPerScore",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:98"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:102"
          },
          {
            "label": "lockTokenReleasedTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:106"
          },
          {
            "label": "lastRewardTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:110"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:114"
          },
          {
            "label": "basicRateDivider",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:118"
          },
          {
            "label": "bonusRatePerSecond",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:122"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:126"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)7989_storage)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:130"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(IERC20)2505",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:134"
          },
          {
            "label": "minimumLockDuration",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:138"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "17",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:146"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)7989_storage)": {
            "label": "mapping(address => struct LockStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)7989_storage": {
            "label": "struct LockStaking.UserInfo",
            "members": [
              {
                "label": "lockedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastBasicRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEndTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "38b3bcb4c99b087713234f050bef4fad96c49cad459654b11a2d0b97c2f19832": {
      "address": "0xE3A9a8A5801092c483Ab7115DEcEAB8b498c74BF",
      "txHash": "0x2b30c69732717517cdba39fed374b9e663a60f4280fadde36a2b8561d99d504e",
      "remoteDeploymentId": "7907dc63-f005-4e28-878e-94995e2ef6d9",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "isAllowedUpdate",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:82"
          },
          {
            "label": "allowedUpdateOneBasedIndexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:86"
          },
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(PoolInfo)6298_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:90"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)6284_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:94"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:98"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:103"
          },
          {
            "label": "listAllowedUpdate",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:107"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:112"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)2505",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:116"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:120"
          },
          {
            "label": "currentNumOfPools",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:124"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:128"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)6284_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)6298_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)6284_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)6298_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)2505",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bonusRatePerSecond",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)6284_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5dbcfca0c4e872544f06f1a8b2d30551e9891ae646a983e6d5c59d9b79be2537": {
      "address": "0x106c1f4Ec360D38D90116C85D91558f096e8AC35",
      "txHash": "0x84fd4c02424311dba1a11e35d7eda999d85230c7aad3974fa686a24095fe2043",
      "remoteDeploymentId": "00dda873-0ead-498a-805b-d445d53f2c65",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "MerkleAirdrop",
            "src": "contracts/MerkleAirdrop.sol:38"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "MerkleAirdrop",
            "src": "contracts/MerkleAirdrop.sol:42"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "MerkleAirdrop",
            "src": "contracts/MerkleAirdrop.sol:46"
          },
          {
            "label": "hasClaimed",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MerkleAirdrop",
            "src": "contracts/MerkleAirdrop.sol:50"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IERC20)2505",
            "contract": "MerkleAirdrop",
            "src": "contracts/MerkleAirdrop.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MerkleAirdrop",
            "src": "contracts/MerkleAirdrop.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "72b0931dffa442c84403a3d0b14030a38d724dc89c969ed41ad789391decc017": {
      "address": "0x8cb842d6742fC9d6B33a49b08C12C2C50d115425",
      "txHash": "0x677ba2e496bdcf06ed39108807edaf420aa92c2a7ccd57b06a97376a47f8b62d",
      "remoteDeploymentId": "d794ff47-3d11-48be-82bd-22e7b8e7dc29",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:38"
          },
          {
            "label": "totalPendingAirdropAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:42"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:46"
          },
          {
            "label": "userPendingReward",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:50"
          },
          {
            "label": "isAllowedDistribute",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:54"
          },
          {
            "label": "listAllowedDistribute",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:58"
          },
          {
            "label": "allowedDistributeOneBasedIndexes",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:62"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC20)2505",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
