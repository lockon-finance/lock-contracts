{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xE1ad529103870fCb4BFe7Ba43C6228013A902e33",
      "txHash": "0x70bde169d4522d888f8281896e28a8d6c91df63c1a482320d0f2e23d00f78877",
      "remoteDeploymentId": "2f64d02a-f583-4a1c-9dc8-fefaac9f0cd3",
      "kind": "uups"
    },
    {
      "address": "0x20d8eE299893eDab1f811484521fe05038141143",
      "txHash": "0x07ddb1be0efcd3706645e02bf1d20c5a9d2ae303e5a37bdf304961331ed3a674",
      "remoteDeploymentId": "89ffed8a-ecf1-4bad-ad85-5827cd81f6ea",
      "kind": "uups"
    },
    {
      "address": "0x4E2A33Cc5C4E85886378540eF3CFB6825C886C46",
      "txHash": "0x0c6661bc4108f1c23fb0ed69a65df325d178425d1bc697e47b49e9795b1c5787",
      "remoteDeploymentId": "bd132597-5899-469e-b4b4-fb1e9317cc2c",
      "kind": "uups"
    },
    {
      "address": "0x30860E1e5558Fc03CED38dB91B2371444D428759",
      "txHash": "0xa4e1b46565e33932a0fcfbf05b6a883e3a6d7183966681998825382a4bbafc73",
      "remoteDeploymentId": "4ece985b-ba81-4ed4-a9b3-b9588cd9b2b9",
      "kind": "uups"
    }
  ],
  "impls": {
    "fac62b451e1e71d11dd42cb06989c40b908f4f46abd42a4ac59523368fc93e22": {
      "address": "0x01Cf9195fFAfc6adF2a5894CC4c87359eA1B4067",
      "txHash": "0x82ece6a7c7078da1a7444a3ae32ded25a12dd41ddac219d47e61c6176470e24d",
      "remoteDeploymentId": "91dd2b48-9a08-405e-9b54-c80a071a0162",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockToken",
            "src": "contracts/LockToken.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)198_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d61827987b97690123cf4b76d90e025252da65c8a48d62c88caf155eca7afd40": {
      "address": "0x578497Cc713DE344293638Aad23b3F585E9e1E76",
      "txHash": "0xd910e29b50c86b3e1ee500196a376c3f8ce5e2b57410bc39d47bb0dd9e717633",
      "remoteDeploymentId": "4b77400a-6db1-4495-bbcb-99b1cc2db0bf",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vestingCategories",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:55"
          },
          {
            "label": "userVestingWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)2110_storage))",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:59"
          },
          {
            "label": "isAllowedDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:63"
          },
          {
            "label": "isBlacklistUser",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:67"
          },
          {
            "label": "listAllowedDeposit",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:71"
          },
          {
            "label": "allowedDepositOneBasedIndexes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:75"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:79"
          },
          {
            "label": "blacklistOneBasedIndexes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:83"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)1382",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)1382": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)2110_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LockonVesting.VestingWallet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingWallet)2110_storage)": {
            "label": "mapping(uint256 => struct LockonVesting.VestingWallet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingWallet)2110_storage": {
            "label": "struct LockonVesting.VestingWallet",
            "members": [
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vestingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "categoryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0f643aabaed8baa81515439b512e546b69e7cd34f463a4e522cf2dc17dca6f71": {
      "address": "0xC36e28bcFEa5f24FBFCDFb0bC8124f8677a6F0d4",
      "txHash": "0x7372aa71dd52e850c0a69c19e77fc73762d18a483149fa271158dc16296f8668",
      "remoteDeploymentId": "b5c96ecc-08df-4c14-be8f-d095a18b9f9d",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "referralTypeToVestingCategoryId",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:49"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:54"
          },
          {
            "label": "lockonVestingAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:59"
          },
          {
            "label": "stableTokenAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:64"
          },
          {
            "label": "lockTokenAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:69"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4f35cbd8f058ace6f367d51070bc7d24cd7ce17e1b3a8e269d937362c56f94e0": {
      "address": "0x4ceacbd4463C0262A1703ff3401834D2Ad558887",
      "txHash": "0x02af2bf053072fd129aa38a0aeddb92592146406268b50512627a7b057d66719",
      "remoteDeploymentId": "b8337e28-28ad-4f23-b0ef-947ce0d59c6c",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "referralTypeToVestingCategoryId",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:49"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:54"
          },
          {
            "label": "lockonVestingAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:59"
          },
          {
            "label": "stableTokenAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:64"
          },
          {
            "label": "lockTokenAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:69"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)303_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
