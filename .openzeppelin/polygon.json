{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8b283425FA255cc9C339C8Ca236B5dc27E2F83d5",
      "txHash": "0x448c7795b5c195d80efff2b669c2fd492b9bfc05362d6dfae503027fb0593381",
      "remoteDeploymentId": "6ddc833d-7ceb-4822-b935-768ad67086c2",
      "kind": "uups"
    },
    {
      "address": "0x84D5Bd6269CE4198Bf298122ce5842cc30236CD8",
      "txHash": "0x3e50b931328005fd03a72b8ec5d3f23789f6e5e26ad77006fd8f6aebc723aac6",
      "remoteDeploymentId": "669fd7ab-16fe-4a93-999d-4edc91a8bb7d",
      "kind": "uups"
    },
    {
      "address": "0xb8Fa7F27E8B238Ae28F807bd8aFB872984451ad4",
      "txHash": "0x20820604318f7b3785b7a4b978eb7d4a34671a31b2ece2bbd440b52fa213a9ad",
      "remoteDeploymentId": "6ca470e0-47a6-4347-9f74-ee22a9fcc594",
      "kind": "uups"
    },
    {
      "address": "0xB671DE35d54bB6fA0b4cb54404e5df12acBe1425",
      "txHash": "0x4f6b1c94a4d61e673b8b303b074ac803a2ee5df6da6361aa0634c7934623ab6a",
      "remoteDeploymentId": "242427cd-1c6e-4a7e-9307-978ba0d32b61",
      "kind": "uups"
    },
    {
      "address": "0xB5C89ed04a5650C10fcD586A6593708F0058eeEe",
      "txHash": "0xbf27c6ba0372252ea7303778f0197705afce59b9683245362e98c31982a720d2",
      "remoteDeploymentId": "2c949fea-3117-42b5-ba89-cf03beb1e110",
      "kind": "uups"
    },
    {
      "address": "0x61ea56C4C46B4acD59126E3526113C35F24DAa39",
      "txHash": "0xfb4793548b93f9cd44c0dafa8aad13f91964ed61684551c1dfa33e91518b1de2",
      "remoteDeploymentId": "94d05daa-17cc-46d6-bd32-36f7deb4d779",
      "kind": "uups"
    },
    {
      "address": "0xD1932c328C781AF317D1420b0c4Ca4749A3A593d",
      "txHash": "0x200c20dd5066837ad7fd55c1b6f7d63de88a736dcbd7abb6e3072cfd54365161",
      "remoteDeploymentId": "775969a2-e139-41f6-af6f-ff9485f9a25c",
      "kind": "uups"
    },
    {
      "address": "0x84C9B2acfD604C018B11B5e74e4F2a5DdACbc42E",
      "txHash": "0x652445d97986d61e99122e0650baf2b89e0216e7b7717311545c18c058e6d0ed",
      "remoteDeploymentId": "ecae62c8-9e94-44b4-8292-baecafb683bf",
      "kind": "uups"
    },
    {
      "address": "0x74826320225Af1Ca91B89Ea858E894D8ec588B04",
      "txHash": "0x10947e6750763a73d53b7686c6c5b49a1b10531443f01905fdda7b2b4b93a4d5",
      "remoteDeploymentId": "49a2751b-0fc5-4486-9592-926fb6563764",
      "kind": "uups"
    },
    {
      "address": "0x24FF9D1f1E9948645786B8b8EAE7a3F430b62093",
      "txHash": "0x45aeb3d7b14ce4902c6c859e0ca91799c81b7dfc758473fad09dc0c3b2bc2054",
      "remoteDeploymentId": "27e4e2e9-f9d7-4279-ad8c-2fed58cd91b3",
      "kind": "uups"
    },
    {
      "address": "0x6ACFfC2251FC94f65fB6d0625cB40B022889EEF6",
      "txHash": "0x00f08e37278e9f9a9e854c50530904cbe1c82b07dfc497b5294442f7aa008820",
      "kind": "uups"
    }
  ],
  "impls": {
    "ab3071991d374e8a84df1dac0782fdd8640fa1342993cf504db13ba571b8cce0": {
      "address": "0x67063DF49CF51d0Fba810c935568a1017C51063C",
      "txHash": "0xcee465f0201c79e596353d5b55b86a65c640fd911054fac983033d9fc7e7e33d",
      "remoteDeploymentId": "67eb3e82-e07e-451f-b012-6578d4717f56",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)198_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "83836c098f8b4b3d1852dedba126dc4caa02a18c399f3267c381342b6fa58e88": {
      "address": "0x06b53E9133299aCb32D82E779Db62513c2cB589f",
      "txHash": "0xfcc326e4fcbfcb9198930c0610e7c05cfd47f20d5bb80399f2c11c41024057be",
      "remoteDeploymentId": "ded2bbd2-9db1-4b7e-adab-9184416ad703",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vestingCategories",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:54"
          },
          {
            "label": "userVestingWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)9774_storage))",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:56"
          },
          {
            "label": "isAllowedDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:58"
          },
          {
            "label": "isBlacklistUser",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:60"
          },
          {
            "label": "listAllowedDeposit",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:62"
          },
          {
            "label": "allowedDepositOneBasedIndexes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:64"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:66"
          },
          {
            "label": "blacklistOneBasedIndexes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:68"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)2505",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)9774_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LockonVesting.VestingWallet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingWallet)9774_storage)": {
            "label": "mapping(uint256 => struct LockonVesting.VestingWallet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingWallet)9774_storage": {
            "label": "struct LockonVesting.VestingWallet",
            "members": [
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vestingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "categoryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9ba371b37eacbec5c25dd3d0170158cd9d93ee8041e68874255440cbdea4bf92": {
      "address": "0x7ebe422159619BdF803c07C02757b19B758c3DEf",
      "txHash": "0xcfd78efc45d316f03f457a45032c3b6a1aea63ff18c2d95f1f05f21fe437f6ac",
      "remoteDeploymentId": "2360e22c-dfa4-42ee-a9d3-9207d1baf2e6",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:72"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:74"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:76"
          },
          {
            "label": "totalLockedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:78"
          },
          {
            "label": "totalLockScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:80"
          },
          {
            "label": "rewardPerScore",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:82"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:84"
          },
          {
            "label": "lockTokenReleasedTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:86"
          },
          {
            "label": "lastRewardTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:88"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:90"
          },
          {
            "label": "basicRateDivider",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:92"
          },
          {
            "label": "bonusRatePerSecond",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:94"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:96"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)5980_storage)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:98"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(IERC20)2505",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:100"
          },
          {
            "label": "minimumLockDuration",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:102"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)5980_storage)": {
            "label": "mapping(address => struct LockStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)5980_storage": {
            "label": "struct LockStaking.UserInfo",
            "members": [
              {
                "label": "lockedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastBasicRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEndTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "db39f6117b7450597e434896545425f503dcc013c86b9d37d83b83744b6a3420": {
      "address": "0xD62fd43302E31fa593AB25Ad21322EeE2E79b778",
      "txHash": "0x11626d42a7ee211896c57bb61e612549007f2d18fab59121298dc1b990d1defa",
      "remoteDeploymentId": "ff38ea9b-eb04-4504-9987-3fc62bdc31f2",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "isStakingClaimed",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:69"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:74"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:76"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20)2505",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:78"
          },
          {
            "label": "lastRewardDistributionTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:80"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:82"
          },
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(PoolInfo)5106_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:84"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5098_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:86"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5098_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)5106_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)5098_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)5106_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)2505",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UserInfo)5098_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c845dd7129e521d1327b551eda67fbc0b90c213d992202133f0e3db8434ca3c4": {
      "address": "0xf062eEC9752c2b8fC385417245fD05A9DB18070a",
      "txHash": "0xbecfa913b4518fc9405214f4e3f2a27a19d881cfd8c9e10b078cb5b7c6d6326e",
      "remoteDeploymentId": "c841195c-f645-4ea9-9d3a-3c5266be9333",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:34"
          },
          {
            "label": "totalPendingAirdropAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:36"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:38"
          },
          {
            "label": "userPendingReward",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:40"
          },
          {
            "label": "isAllowedDistribute",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:42"
          },
          {
            "label": "listAllowedDistribute",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:44"
          },
          {
            "label": "allowedDistributeOneBasedIndexes",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:46"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC20)2505",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1d7df457b480e77e53a2a16ccb34ae85e93851151c8c85bc60fac00afd8c657c": {
      "address": "0x9c6662DB83fea611314052020bcE51D87F0a0D88",
      "txHash": "0x32e3fd387b9758b2eedbd3b2b831c61e045f2d718cb6775dc1244f84ed93bd73",
      "remoteDeploymentId": "cf82ea76-2acf-45e4-bd32-adafa83c46c6",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:72"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:74"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:76"
          },
          {
            "label": "totalLockedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:78"
          },
          {
            "label": "totalLockScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:80"
          },
          {
            "label": "rewardPerScore",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:82"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:84"
          },
          {
            "label": "lockTokenReleasedTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:86"
          },
          {
            "label": "lastRewardTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:88"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:90"
          },
          {
            "label": "basicRateDivider",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:92"
          },
          {
            "label": "bonusRatePerSecond",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:94"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:96"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)6777_storage)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:98"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(IERC20)2505",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:100"
          },
          {
            "label": "minimumLockDuration",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:102"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)6777_storage)": {
            "label": "mapping(address => struct LockStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)6777_storage": {
            "label": "struct LockStaking.UserInfo",
            "members": [
              {
                "label": "lockedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastBasicRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEndTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "730d61ab8895ce7abdc9dde27b343b3f30fdee1eed12765f71632a43102613fe": {
      "address": "0xaE6E48b11A9E404326bbeeb5bB30cba3eF616a68",
      "txHash": "0xb949dc4bb6760f5a3880de983118621d1637506d5b166b6d48ab749b1edcc74f",
      "remoteDeploymentId": "8e61aae5-d2ea-4321-a829-20f4880cc134",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "isStakingClaimed",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:77"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:82"
          },
          {
            "label": "isAllowedUpdate",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:84"
          },
          {
            "label": "listAllowedUpdate",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:86"
          },
          {
            "label": "allowedUpdateOneBasedIndexes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:88"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:90"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC20)2505",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:92"
          },
          {
            "label": "lastRewardDistributionTime",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:94"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:96"
          },
          {
            "label": "currentNumOfPools",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:98"
          },
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_struct(PoolInfo)6268_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:100"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)6254_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:102"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)6254_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)6268_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)6254_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)6268_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)2505",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bonusRatePerSecond",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)6254_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8962932141d228ba168eb381c6bdd12b4a4f26d07cf11cd3277334d11b99ca1f": {
      "address": "0xCf6Ad3426de015Be8BbB8cA9fF832301c4af4d16",
      "txHash": "0x58ebb1d205e6a482db0d5a4047cde2578766d8fedbcc9f3bd0106df0e5f8f3d5",
      "remoteDeploymentId": "4982705b-c34f-4088-8875-1611546dd7c7",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockToken",
            "src": "contracts/LockToken.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)198_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "84cab274998e7bcad83951f5574772d847d0783b75a613fb2214caa2be3d9777": {
      "address": "0xB7A6581d99aEC5E7ab88811Ff0c78Faf376bf2b4",
      "txHash": "0x7d1fe4d81505db1685707d2023977bfd3c9053804b128b51f286c2e8a4bfae55",
      "remoteDeploymentId": "0cd0053f-cd6d-44a1-84c0-97febe1c827e",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vestingCategories",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:55"
          },
          {
            "label": "userVestingWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)9907_storage))",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:59"
          },
          {
            "label": "isAllowedDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:63"
          },
          {
            "label": "isBlacklistUser",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:67"
          },
          {
            "label": "listAllowedDeposit",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:71"
          },
          {
            "label": "allowedDepositOneBasedIndexes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:75"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:79"
          },
          {
            "label": "blacklistOneBasedIndexes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:83"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)2505",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)9907_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LockonVesting.VestingWallet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingWallet)9907_storage)": {
            "label": "mapping(uint256 => struct LockonVesting.VestingWallet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingWallet)9907_storage": {
            "label": "struct LockonVesting.VestingWallet",
            "members": [
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vestingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "categoryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "92d875ede32463de7038cfb5f11d372454b63ca9e4130f126e05622009057622": {
      "address": "0x123ccb46eC1BBffF687104bf80545C21D53A745c",
      "txHash": "0x38b0d0a1abc092e240b92324ebcfc6e0244043effff822088c38e81d88981216",
      "remoteDeploymentId": "461710de-8f6c-45e5-ab19-3c8ca0fe4b22",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:78"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:82"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:86"
          },
          {
            "label": "totalLockedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:90"
          },
          {
            "label": "totalLockScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:94"
          },
          {
            "label": "rewardPerScore",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:98"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:102"
          },
          {
            "label": "lockTokenReleasedTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:106"
          },
          {
            "label": "lastRewardTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:110"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:114"
          },
          {
            "label": "basicRateDivider",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:118"
          },
          {
            "label": "bonusRatePerSecond",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:122"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:126"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)7989_storage)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:130"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(IERC20)2505",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:134"
          },
          {
            "label": "minimumLockDuration",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:138"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "17",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:146"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)7989_storage)": {
            "label": "mapping(address => struct LockStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)7989_storage": {
            "label": "struct LockStaking.UserInfo",
            "members": [
              {
                "label": "lockedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastBasicRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEndTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "72b0931dffa442c84403a3d0b14030a38d724dc89c969ed41ad789391decc017": {
      "address": "0x4d7fA25264E390b8Ce9Fff0d8CA892b76c3AcBcf",
      "txHash": "0x1784c38eb40724acd6973db4506b51a90e394515f923c687e7658d715b295411",
      "remoteDeploymentId": "8c99849e-6877-464a-8f86-499d1f60f002",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:38"
          },
          {
            "label": "totalPendingAirdropAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:42"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:46"
          },
          {
            "label": "userPendingReward",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:50"
          },
          {
            "label": "isAllowedDistribute",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:54"
          },
          {
            "label": "listAllowedDistribute",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:58"
          },
          {
            "label": "allowedDistributeOneBasedIndexes",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:62"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC20)2505",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "38b3bcb4c99b087713234f050bef4fad96c49cad459654b11a2d0b97c2f19832": {
      "address": "0x060913762AFE4fc4b0A431Ecee7e0BDD9D6e180f",
      "txHash": "0xc46b8d2d380de49372ad686a2089f2fb8a24ddb220b43901cdd516e6ece1ec29",
      "remoteDeploymentId": "bbc9eb04-2f88-44a3-84e7-e475fe5008ca",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "isAllowedUpdate",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:82"
          },
          {
            "label": "allowedUpdateOneBasedIndexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:86"
          },
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(PoolInfo)6298_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:90"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)6284_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:94"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:98"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:103"
          },
          {
            "label": "listAllowedUpdate",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:107"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:112"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)2505",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:116"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:120"
          },
          {
            "label": "currentNumOfPools",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:124"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:128"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)6284_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)6298_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)6284_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)6298_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)2505",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bonusRatePerSecond",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)6284_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0c37620816b20d4a94230df39c8c02e281ce729c9b858cb4e109316932521a20": {
      "address": "0xD8295ed43473507CBD01c43cfbd4755628C20784",
      "txHash": "0xd59473afa28ddb0a6567856e559d3e410851cf26c15edc9ea102de722eddca1e",
      "remoteDeploymentId": "733686ed-77a9-4c4e-b4e2-cfe1aad2b1ed",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "isAllowedUpdate",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:82"
          },
          {
            "label": "allowedUpdateOneBasedIndexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:86"
          },
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(PoolInfo)4339_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:90"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)4325_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:94"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:98"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:103"
          },
          {
            "label": "listAllowedUpdate",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:107"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:112"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)1751",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:116"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:120"
          },
          {
            "label": "currentNumOfPools",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:124"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:128"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)303_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)1751": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)4325_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)4339_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)4325_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)4339_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)1751",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bonusRatePerSecond",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)4325_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "493ef660d48a10af9b29b292bd7ab9ec44614f736bec93fc0239e0a0b4cdf1dc": {
      "address": "0xFF0Bc52bf0536bDd72AAad3118724A33c2e20316",
      "txHash": "0x50dc97298526262e02cd8241ac04b6263d5d9a3583247886c4b6195aa224ed0d",
      "remoteDeploymentId": "eb9f4439-abe2-48e4-a31e-2de00b1d2bf5",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vestingCategories",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:55"
          },
          {
            "label": "userVestingWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)9674_storage))",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:59"
          },
          {
            "label": "isAllowedDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:63"
          },
          {
            "label": "isBlacklistUser",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:67"
          },
          {
            "label": "listAllowedDeposit",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:71"
          },
          {
            "label": "allowedDepositOneBasedIndexes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:75"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:79"
          },
          {
            "label": "blacklistOneBasedIndexes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:83"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)2505",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)9674_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LockonVesting.VestingWallet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingWallet)9674_storage)": {
            "label": "mapping(uint256 => struct LockonVesting.VestingWallet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingWallet)9674_storage": {
            "label": "struct LockonVesting.VestingWallet",
            "members": [
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vestingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "categoryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9fac7c42035fa0f843780b65b40f4d9052f10ca1a82999c528de8fa04008029b": {
      "address": "0x267FD580cF00D02116BFD0Ea76E0b78ea56aD5ff",
      "txHash": "0xa15b984fbd2fcc98662c121c198f630bcc426fa9a1db7433cbb991a171413366",
      "remoteDeploymentId": "d96d8709-5a42-4115-860e-3a4ed9e01aab",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "isAllowedUpdate",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:79"
          },
          {
            "label": "allowedUpdateOneBasedIndexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:83"
          },
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(PoolInfo)5816_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:87"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5802_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:91"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:95"
          },
          {
            "label": "stakeTokenToVestingCategoryId",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:99"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:104"
          },
          {
            "label": "listAllowedUpdate",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:108"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:113"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(IERC20)2505",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:117"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:121"
          },
          {
            "label": "currentNumOfPools",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:125"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:129"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5802_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)5816_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)5802_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)5816_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)2505",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bonusRatePerSecond",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)5802_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fac62b451e1e71d11dd42cb06989c40b908f4f46abd42a4ac59523368fc93e22": {
      "address": "0xEa24b8A9E7b12F9837c055a6E8F8ccdBfA9CF4D5",
      "txHash": "0x6c911a1a0f73d14e5ef77d5b07048c36ed19836c00d221634d70a9419972ddd3",
      "remoteDeploymentId": "451f5b42-ae69-452d-bae1-c058908904d1",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockToken",
            "src": "contracts/LockToken.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)198_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e719fac15e994bef3f8533217e2a18f19f0322a64cb441c7c6dd9a2930b17b1c": {
      "address": "0xA45cd8b6f81DAAae4d8D61cC9e6B7Fe07Be64Ac3",
      "txHash": "0x31c257ca901e7f0aa6c459a4977a11430dcacb1c376cfa2b182821321e8c2757",
      "remoteDeploymentId": "b74e11f6-9f36-4d55-b69e-5e2f3a462bb2",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:78"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:82"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:86"
          },
          {
            "label": "totalLockedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:90"
          },
          {
            "label": "totalLockScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:94"
          },
          {
            "label": "rewardPerScore",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:98"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:102"
          },
          {
            "label": "lockTokenReleasedTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:106"
          },
          {
            "label": "lastRewardTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:110"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:114"
          },
          {
            "label": "basicRateDivider",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:118"
          },
          {
            "label": "bonusRatePerSecond",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:122"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:126"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)7671_storage)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:130"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(IERC20)2505",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:134"
          },
          {
            "label": "minimumLockDuration",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:138"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "17",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:146"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)7671_storage)": {
            "label": "mapping(address => struct LockStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)7671_storage": {
            "label": "struct LockStaking.UserInfo",
            "members": [
              {
                "label": "lockedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastBasicRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEndTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f753f265849c608af7f8f84c6e412407de9a9a8ed21d139af33f2a843460ddae": {
      "address": "0x08c5A41b21d3F3ff8D774a22b21926e91e4FC369",
      "txHash": "0x8997a826ac27059ded93cca1c4c6d581a618fc1d7e0b066c9aa9b17dde614867",
      "remoteDeploymentId": "0b328043-0c26-47c2-9ec6-2bde041cb0fe",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:42"
          },
          {
            "label": "totalPendingAirdropAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:46"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:50"
          },
          {
            "label": "userPendingReward",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:54"
          },
          {
            "label": "isAllowedDistribute",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:58"
          },
          {
            "label": "listAllowedDistribute",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:62"
          },
          {
            "label": "allowedDistributeOneBasedIndexes",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:66"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC20)2505",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:70"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "bc12cf03216b95b5c96355c86d23ae66fd9e914c137926644e40757350bb48aa": {
      "address": "0x1fd1f7735b9494c67Cc00D81425B8B2e87871131",
      "txHash": "0xbf3d01d09e29b3e20f02147aae603bb42d1cd37b1c0361f4364bb6a2d17cd07d",
      "remoteDeploymentId": "ac47b9ea-3c10-4e68-933d-e1cf39173e04",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_struct(PoolInfo)4331_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:76"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)4317_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:80"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:84"
          },
          {
            "label": "stakeTokenToVestingCategoryId",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:88"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:93"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:98"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC20)1751",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:102"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:106"
          },
          {
            "label": "currentNumOfPools",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:110"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)303_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)1751": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)4317_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)4331_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)4317_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)4331_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)1751",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastGeneratedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bonusRatePerSecond",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)4317_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1a45b6c6814859626c1faeb25214a5ebac177c086bb1838c2e2767124cc3df44": {
      "address": "0x9C1d12de7E72f07271e689e49087a16630402a4A",
      "txHash": "0xd4f6b56f73b8c3859171dde87b5bf4ea299b4e7914fcaa5ba6ab2d8ef78f39ad",
      "remoteDeploymentId": "a2db7a62-e33d-49a3-a463-d72559dc5f47",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:78"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:82"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:86"
          },
          {
            "label": "totalLockedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:90"
          },
          {
            "label": "totalLockScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:94"
          },
          {
            "label": "rewardPerScore",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:98"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:102"
          },
          {
            "label": "lockTokenReleasedTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:106"
          },
          {
            "label": "lastRewardTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:110"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:114"
          },
          {
            "label": "basicRateDivider",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:118"
          },
          {
            "label": "bonusRatePerSecond",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:122"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:126"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)4322_storage)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:130"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(IERC20)1751",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:134"
          },
          {
            "label": "minimumLockDuration",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:138"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "17",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:146"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)303_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(IERC20)1751": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)4322_storage)": {
            "label": "mapping(address => struct LockStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)4322_storage": {
            "label": "struct LockStaking.UserInfo",
            "members": [
              {
                "label": "lockedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastBasicRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEndTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4f35cbd8f058ace6f367d51070bc7d24cd7ce17e1b3a8e269d937362c56f94e0": {
      "address": "0x040a44663ceab12cf673b10b203adD70Ec4631eE",
      "txHash": "0xbc9e3214b7be73a42a28a1993f398eccc3ff4fb2fef39375ba8a6fa9727f9a7d",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "referralTypeToVestingCategoryId",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:49"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:54"
          },
          {
            "label": "lockonVestingAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:59"
          },
          {
            "label": "stableTokenAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:64"
          },
          {
            "label": "lockTokenAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:69"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LockonReferral",
            "src": "contracts/LockonReferral.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)303_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x040a44663ceab12cf673b10b203adD70Ec4631eE",
        "0x41a6bc26BA220CdD3b8162d94999661912a2d494"
      ]
    }
  }
}
