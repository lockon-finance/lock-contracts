{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8b283425FA255cc9C339C8Ca236B5dc27E2F83d5",
      "txHash": "0x448c7795b5c195d80efff2b669c2fd492b9bfc05362d6dfae503027fb0593381",
      "remoteDeploymentId": "6ddc833d-7ceb-4822-b935-768ad67086c2",
      "kind": "uups"
    },
    {
      "address": "0x84D5Bd6269CE4198Bf298122ce5842cc30236CD8",
      "txHash": "0x3e50b931328005fd03a72b8ec5d3f23789f6e5e26ad77006fd8f6aebc723aac6",
      "remoteDeploymentId": "669fd7ab-16fe-4a93-999d-4edc91a8bb7d",
      "kind": "uups"
    },
    {
      "address": "0xb8Fa7F27E8B238Ae28F807bd8aFB872984451ad4",
      "txHash": "0x20820604318f7b3785b7a4b978eb7d4a34671a31b2ece2bbd440b52fa213a9ad",
      "remoteDeploymentId": "6ca470e0-47a6-4347-9f74-ee22a9fcc594",
      "kind": "uups"
    },
    {
      "address": "0xB671DE35d54bB6fA0b4cb54404e5df12acBe1425",
      "txHash": "0x4f6b1c94a4d61e673b8b303b074ac803a2ee5df6da6361aa0634c7934623ab6a",
      "remoteDeploymentId": "242427cd-1c6e-4a7e-9307-978ba0d32b61",
      "kind": "uups"
    },
    {
      "address": "0xB5C89ed04a5650C10fcD586A6593708F0058eeEe",
      "txHash": "0xbf27c6ba0372252ea7303778f0197705afce59b9683245362e98c31982a720d2",
      "remoteDeploymentId": "2c949fea-3117-42b5-ba89-cf03beb1e110",
      "kind": "uups"
    }
  ],
  "impls": {
    "ab3071991d374e8a84df1dac0782fdd8640fa1342993cf504db13ba571b8cce0": {
      "address": "0x67063DF49CF51d0Fba810c935568a1017C51063C",
      "txHash": "0xcee465f0201c79e596353d5b55b86a65c640fd911054fac983033d9fc7e7e33d",
      "remoteDeploymentId": "67eb3e82-e07e-451f-b012-6578d4717f56",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)198_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "83836c098f8b4b3d1852dedba126dc4caa02a18c399f3267c381342b6fa58e88": {
      "address": "0x06b53E9133299aCb32D82E779Db62513c2cB589f",
      "txHash": "0xfcc326e4fcbfcb9198930c0610e7c05cfd47f20d5bb80399f2c11c41024057be",
      "remoteDeploymentId": "ded2bbd2-9db1-4b7e-adab-9184416ad703",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vestingCategories",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:54"
          },
          {
            "label": "userVestingWallet",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)7780_storage))",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:56"
          },
          {
            "label": "isAllowedDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:58"
          },
          {
            "label": "isBlacklistUser",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:60"
          },
          {
            "label": "listAllowedDeposit",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:62"
          },
          {
            "label": "allowedDepositOneBasedIndexes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:64"
          },
          {
            "label": "blacklist",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:66"
          },
          {
            "label": "blacklistOneBasedIndexes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:68"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(IERC20)2505",
            "contract": "LockonVesting",
            "src": "contracts/LockonVesting.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(VestingWallet)7780_storage))": {
            "label": "mapping(address => mapping(uint256 => struct LockonVesting.VestingWallet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingWallet)7780_storage)": {
            "label": "mapping(uint256 => struct LockonVesting.VestingWallet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingWallet)7780_storage": {
            "label": "struct LockonVesting.VestingWallet",
            "members": [
              {
                "label": "userAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "vestingAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "categoryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9ba371b37eacbec5c25dd3d0170158cd9d93ee8041e68874255440cbdea4bf92": {
      "address": "0x7ebe422159619BdF803c07C02757b19B758c3DEf",
      "txHash": "0xcfd78efc45d316f03f457a45032c3b6a1aea63ff18c2d95f1f05f21fe437f6ac",
      "remoteDeploymentId": "2360e22c-dfa4-42ee-a9d3-9207d1baf2e6",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:72"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:74"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:76"
          },
          {
            "label": "totalLockedAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:78"
          },
          {
            "label": "totalLockScore",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:80"
          },
          {
            "label": "rewardPerScore",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:82"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:84"
          },
          {
            "label": "lockTokenReleasedTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:86"
          },
          {
            "label": "lastRewardTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:88"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:90"
          },
          {
            "label": "basicRateDivider",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:92"
          },
          {
            "label": "bonusRatePerSecond",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:94"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:96"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)5980_storage)",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:98"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(IERC20)2505",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:100"
          },
          {
            "label": "minimumLockDuration",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:102"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "LockStaking",
            "src": "contracts/LockStaking.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)5980_storage)": {
            "label": "mapping(address => struct LockStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)5980_storage": {
            "label": "struct LockStaking.UserInfo",
            "members": [
              {
                "label": "lockedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockScore",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastBasicRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lockEndTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cumulativePendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "db39f6117b7450597e434896545425f503dcc013c86b9d37d83b83744b6a3420": {
      "address": "0xD62fd43302E31fa593AB25Ad21322EeE2E79b778",
      "txHash": "0x11626d42a7ee211896c57bb61e612549007f2d18fab59121298dc1b990d1defa",
      "remoteDeploymentId": "ff38ea9b-eb04-4504-9987-3fc62bdc31f2",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "isStakingClaimed",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:69"
          },
          {
            "label": "validatorAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:74"
          },
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:76"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20)2505",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:78"
          },
          {
            "label": "lastRewardDistributionTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:80"
          },
          {
            "label": "currentRewardAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:82"
          },
          {
            "label": "tokenPoolInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(PoolInfo)5106_storage)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:84"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5098_storage))",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:86"
          },
          {
            "label": "isRequestIdProcessed",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "contract": "IndexStaking",
            "src": "contracts/IndexStaking.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)405_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)292_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)353_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2505": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5098_storage))": {
            "label": "mapping(address => mapping(address => struct IndexStaking.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)5106_storage)": {
            "label": "mapping(address => struct IndexStaking.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)5098_storage)": {
            "label": "mapping(address => struct IndexStaking.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)5106_storage": {
            "label": "struct IndexStaking.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_contract(IERC20)2505",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UserInfo)5098_storage": {
            "label": "struct IndexStaking.UserInfo",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "claimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastStakedTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c845dd7129e521d1327b551eda67fbc0b90c213d992202133f0e3db8434ca3c4": {
      "address": "0xf062eEC9752c2b8fC385417245fD05A9DB18070a",
      "txHash": "0xbecfa913b4518fc9405214f4e3f2a27a19d881cfd8c9e10b078cb5b7c6d6326e",
      "remoteDeploymentId": "c841195c-f645-4ea9-9d3a-3c5266be9333",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "lockonVesting",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:34"
          },
          {
            "label": "totalPendingAirdropAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:36"
          },
          {
            "label": "startTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:38"
          },
          {
            "label": "userPendingReward",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:40"
          },
          {
            "label": "isAllowedDistribute",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:42"
          },
          {
            "label": "listAllowedDistribute",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:44"
          },
          {
            "label": "allowedDistributeOneBasedIndexes",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:46"
          },
          {
            "label": "lockToken",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC20)1382",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1382": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
